import Head from "next/head";

const Home = () => {
  const copyFlora = (text: string) => {
    window.navigator.clipboard
      .writeText(text)
      .then((_) => alert("copiado com sucesso"))
      .catch((_) => alert("erro ao copiar"));
  };

  const copyAsync = (asyncFunction: Promise<string>) => {
    navigator.clipboard.write([
      new ClipboardItem({
        "text/plain": Promise.resolve(asyncFunction),
      }),
    ]);
  };

  function detected(regex: RegExp): boolean {
    if (typeof window === "undefined") {
      return false;
    }
    const userAgent = window?.navigator.userAgent;
    return regex.test(userAgent);
  }

  const isSafari = () => detected(/safari/i);
  const isChrome = () => detected(/chrome|chromium|crios/i);
  const isMobile = () =>
    detected(
      /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/i
    );
  const isTablet = () =>
    detected(/(tablet|ipad|playbook|silk)|(android(?!.*mobile))/i);

  const isSafariBrowser = isSafari() && !isChrome();

  const copyShare = async (text: string) => {
    await navigator.share({
      url: text,
    });
  };

  const textToCopy = () => {
    return fetch("https://jsonplaceholder.typicode.com/todos/6")
      .then((it) => it.json())
      .then((_) => "https://www.google.com");
  };

  const copy = async (text: string | Promise<string>) => {
    try {
      if (
        typeof navigator.share !== "undefined" &&
        (isMobile() || isTablet())
      ) {
        return copyShare(await text);
      }
      if (text instanceof Promise && isSafariBrowser) {
        return copyAsync(text);
      }

      copyFlora(await text);
    } catch (err) {}
  };

  return (
    <div className="flex flex-col justify-center items-center gap-2 w-screen h-screen">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <button
        onClick={() => copy(textToCopy())}
        className="px-2 bg-black text-white"
      >
        botao dinamico
      </button>
    </div>
  );
};

export default Home;
